<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="<%= product.metadesc %>" />
    <meta name="keywords" content="<%= product.keywords %>" />
    <link rel="icon" href="logo&ui/favicon.png" type="image/png" />
    <title></title>
    <!-- fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Mulish:wght@500&display=swap"
      rel="stylesheet"
    />
    <!-- pickupscontainer -->
    <link rel="stylesheet" href="pickups.css" />
    <!-- spinner -->
    <link rel="stylesheet" href="imageloading.css" />
    <!-- nav -->
    <link rel="stylesheet" href="main.css" />
    <!-- footer -->
    <link rel="stylesheet" href="footer.css" />
    <!-- main -->
    <style>
      main {
        display: flex;
        align-items: flex-start;
        width: 100%;
        padding: 0 40px;
        box-sizing: border-box;
        margin-top: 20px;
        gap: 10px;
      }
      main .imagescontainer {
        position: relative;
        width: 70%;
        aspect-ratio: 2/1;
        background-color: rgb(255, 255, 255);
      }
      main .scrollimages {
        height: 100%;
        width: 100%;
        display: flex;
        overflow-x: scroll;
        overflow-y: hidden;
        scroll-behavior: smooth;
        scroll-snap-type: x mandatory;
      }
      main .scrollimages::-webkit-scrollbar {
        height: 0;
      }
      main .scrollimages .image {
        position: relative;
        background-color: rgb(255, 255, 255);
        scroll-snap-align: start;
        scroll-snap-stop: always;
        min-width: 100%;
        width: 100%;
        height: 100%;
      }
      main .scrollimages .image .loading {
        position: absolute;
        height: 100%;
        width: 100%;
        inset: 0;
        display: grid;
        place-content: center;
        z-index: 10;
        background-color: white;
      }
      main .scrollimages .image img {
        object-fit: contain;
        object-position: center;
        height: 100%;
        width: 100%;
      }
      /* dots */
      .dotscontainer {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        height: 30px;
        bottom: 5px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        border-radius: 100px;
        padding-inline: 20px;
        z-index: 20;
      }
      .dots {
        height: 6px;
        aspect-ratio: 1;
        background-color: rgb(255, 255, 255);
        outline: 2px solid var(--theme20);
        border-radius: 50%;
      }
      .activedot {
        background-color: var(--theme) !important;
        height: 10px !important;
      }
      /* share button */
      .sharebutton {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: white;
        cursor: pointer;
        border: none;
        display: flex;
        flex-direction: column;
        align-items: center;
        border-radius: 100px;
      }
      .sharebutton:hover span {
        opacity: 1;
        transform: translate(-50%, 0px);
      }
      .sharebutton svg {
        height: 30px;
      }
      .sharebutton span {
        position: absolute;
        top: -20px;
        left: 50%;
        transform: translate(-50%, -20px);
        font-size: 12px;
        color: var(--headingsvg);
        pointer-events: none;
        opacity: 0;
        transition: 0.3s;
        white-space: nowrap;
      }
      /* imagesnote */
      .imagesnote {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        white-space: nowrap;
        bottom: -20px;
        font-size: 10px;
        color: var(--headingsvg);
      }
      /*  */
      main .details {
        width: 30%;
        border-radius: 10px;
        padding: 20px;
        box-sizing: border-box;
        background-color: var(--bg1);
        box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.123);
      }
      main .details > .title {
        text-align: center;
      }
      /*  */
      .alloptionscontainer,
      .optionscontainer {
        margin-top: 20px;
      }
      .optionscontainer .optionsmenu {
        margin-top: 10px;
        display: flex;
        gap: 10px;
        overflow-x: scroll;
        overflow-y: hidden;
      }
      .optionscontainer .optionsmenu::-webkit-scrollbar {
        height: 0;
      }
      .optionscontainer .optionsmenu .options {
        text-align: center;
        height: 100%;
        padding: 10px;
        border-radius: 10px;
        background-color: white;
        color: var(--headingsvg);
        border: 1px solid var(--theme);
        cursor: pointer;
        font-size: 14px;
      }
      .activeoption {
        background-color: var(--theme) !important;
        color: white !important;
        border: 1px solid transparent !important;
      }
      /*  */
      .timecontainer .timestamps {
        margin-top: 10px;
        display: flex;
        align-items: center;
        justify-content: space-between;
      }
      .timecontainer .timestamps span {
        width: 100%;
        height: 30px;
        display: grid;
        place-items: center;
      }
      .activetimestamp {
        color: var(--theme) !important;
      }
      .timecontainer input {
        width: 80%;
        position: relative;
        left: 50%;
        transform: translateX(-50%);
      }
      /*  */
      .showprices {
        display: flex;
        margin-top: 20px;
        /* border: 1px dashed grey; */
        padding: 10px 0px;
        border-radius: 10px;
        box-shadow: 5px 5px 7px rgba(0, 0, 0, 0.123) inset,
          -5px -5px 7px rgba(255, 255, 255) inset;
      }
      .showprices div {
        width: 100%;
        font-size: 10px;
        color: var(--headingsvg50);
        text-align: center;
      }
      .showprices div span {
        font-size: 16px;
        color: var(--headingsvg);
      }
      .showprices div span::before {
        content: "â‚¹";
      }
      /* addtocart */
      .addtocart {
        position: relative;
        height: 50px;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        box-sizing: border-box;
        padding: 10px 0px;
        background-color: var(--theme);
        border-radius: 10px;
        margin-top: 20px;
        cursor: pointer;
        color: white;
        overflow: hidden;
      }
      .addtocart > * {
        z-index: 2;
      }
      .addtocart svg {
        height: 100%;
      }
      .addtocart .deletesvg {
        display: none;
      }
      .eff {
        pointer-events: none;
        position: absolute;
        left: 0;
        top: 0;
        height: 0px;
        aspect-ratio: 1;
        background-color: rgb(0, 173, 0);
        transform: translate(-50%, -50%);
        border-radius: 50%;
        transition: height 0.35s linear;
        z-index: 1;
      }
      /* shippingdetail */
      .shippingdetail {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        height: 30px;
        margin-top: 10px;
      }
      .shippingdetail svg {
        height: 30px;
        width: 30px;
      }
      .shippingdetail span {
        white-space: nowrap;
        font-size: 12px;
      }
      /* main 2 container */
      .main2container {
        width: 100%;
        box-sizing: border-box;
        margin-top: 30px;
        padding: 0 40px;
        display: none;
      }
      .addonscontainer {
        width: calc(70% - 45px);
        position: relative;
        border: 1px solid grey;
        height: 150px;
        border-radius: 10px;
        display: flex;
        flex-direction: column;
      }
      .addonscontainer .title {
        margin: 10px;
      }
      .addonscontainer .addmore {
        position: absolute;
        top: 50%;
        right: 0;
        transform: translate(50%, -50%);
        height: 80px;
        aspect-ratio: 1;
        border: none;
        background-color: white;
        box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.123);
        border-radius: 10px;
      }
      .addonscontainerinner {
        height: 100%;
        width: 100%;
        box-sizing: border-box;
        padding: 10px;
        display: flex;
        gap: 10px;
      }
      /* added items */
      .addeditem {
        position: relative;
        height: 100%;
        aspect-ratio: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.123);
        border-radius: 10px;
      }
      .addeditem > img {
        height: 60px;
        aspect-ratio: 1;
      }
      .addeditem > .name {
        font-size: 12px;
        text-overflow: ellipsis;
        white-space: nowrap;
        width: 60px;
        overflow: hidden;
        text-align: center;
      }
      /* description */
      .descriptioncontainer {
        margin-top: 30px;
        padding: 30px 40px;
        box-sizing: border-box;
        background-color: var(--bg1);
      }
      .descriptioncontainer h2 {
        display: flex;
        align-items: center;
        gap: 10px;
      }
      .descriptioncontainer h2 svg {
        height: 25px;
      }
      .descriptioncontainer ul li {
        margin-top: 10px;
      }
      /* range input */
      input[type="range"] {
        -webkit-appearance: none;
        appearance: none;
        height: 20px;
        border-radius: 5px;
        background-color: transparent;
      }
      input[type="range"]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        height: 15px;
        aspect-ratio: 1;
        background: white;
        outline: 1px solid var(--theme);
        outline-offset: 0px;
        border-radius: 50%;
        cursor: pointer;
        transform: translateY(calc(-50% + 1px));
        transition: 0.2s linear, background-color 0s;
      }
      @media screen and (width>450px) {
        input[type="range"]::-webkit-slider-thumb:hover {
          outline-offset: 2px;
          background: var(--theme);
          transform: translateY(calc(-50% + 1px)) scale(1.2);
        }
      }
      @media screen and (width<450px) {
        input[type="range"]::-webkit-slider-thumb {
          -webkit-appearance: none;
          appearance: none;
          height: 15px;
          aspect-ratio: 1;
          outline: 1px solid var(--theme);
          border-radius: 50%;
          cursor: pointer;
          transition: 0.2s linear, background-color 0s;
          outline-offset: 2px;
          background: var(--theme);
          transform: translateY(calc(-50% + 1px)) scale(1.2);
        }
      }

      input[type="range"]::-webkit-slider-runnable-track {
        width: 100%;
        height: 2px;
        background-color: var(--theme);
      }
      /* mobile */
      @media screen and (width<450px) {
        h2 {
          font-size: 18px;
        }
        main {
          align-items: unset;
          flex-direction: column;
          padding: 0 10px;
        }
        main .imagescontainer {
          width: 100%;
        }
        main .details {
          width: 100%;
          border: none;
          border-radius: 0;
          padding: 20px;
          margin-top: 20px;
          background-color: var(--bg1);
        }
        .descriptioncontainer {
          padding: 30px 10px;
          margin-top: 0px;
          background-color: white;
        }
        .descriptioncontainer ul li {
          margin-top: 10px;
          font-size: 14px;
        }
      }
    </style>
    <!-- pickup container -->
    <style>
      .pickupscontainer {
        padding: 40px;
        background-color: white;
      }
      .cardscontainer {
        padding: 10px;
      }
      .cards {
        border: 2px solid var(--bg1) !important;
        box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.123);
      }
      .cards .name {
        text-decoration: none;
        font-size: 16px !important;
      }
      .otherdetailscontainer .rent {
        background-color: var(--theme);
        color: white !important;
        width: 70%;
        padding: 5px 10px;
        text-align: center;
        border-radius: 10px;
      }
      @media screen and (width<450px) {
        .pickupscontainer {
          padding: 10px;
          background-color: var(--bg1);
        }
        .cardscontainer {
          padding: 0px;
        }
        .cards {
          border: unset !important;
          box-shadow: unset;
        }
        .cards .name {
          text-decoration: none;
          font-size: 12px !important;
        }
      }
    </style>
  </head>
  <body>
    <nav>
      <a href="/" class="logolink">
        <img src="logo&ui/3dlogo.png" alt="" class="logodesk" />
      </a>
      <a href="cart" class="cart">
        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
          <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
          ></g>
          <g id="SVGRepo_iconCarrier">
            <path
              d="M2.23737 2.28845C1.84442 2.15746 1.41968 2.36983 1.28869 2.76279C1.15771 3.15575 1.37008 3.58049 1.76303 3.71147L2.02794 3.79978C2.70435 4.02524 3.15155 4.17551 3.481 4.32877C3.79296 4.47389 3.92784 4.59069 4.01426 4.71059C4.10068 4.83049 4.16883 4.99538 4.20785 5.33722C4.24907 5.69823 4.2502 6.17 4.2502 6.883L4.2502 9.55484C4.25018 10.9224 4.25017 12.0247 4.36673 12.8917C4.48774 13.7918 4.74664 14.5497 5.34855 15.1516C5.95047 15.7535 6.70834 16.0124 7.60845 16.1334C8.47542 16.25 9.57773 16.25 10.9453 16.25H18.0002C18.4144 16.25 18.7502 15.9142 18.7502 15.5C18.7502 15.0857 18.4144 14.75 18.0002 14.75H11.0002C9.56479 14.75 8.56367 14.7484 7.80832 14.6468C7.07455 14.5482 6.68598 14.3677 6.40921 14.091C6.17403 13.8558 6.00839 13.5398 5.9034 13H16.0222C16.9817 13 17.4614 13 17.8371 12.7522C18.2128 12.5045 18.4017 12.0636 18.7797 11.1817L19.2082 10.1817C20.0177 8.2929 20.4225 7.34849 19.9779 6.67422C19.5333 5.99996 18.5058 5.99996 16.4508 5.99996H5.74526C5.73936 5.69227 5.72644 5.41467 5.69817 5.16708C5.64282 4.68226 5.52222 4.2374 5.23112 3.83352C4.94002 3.42965 4.55613 3.17456 4.1137 2.96873C3.69746 2.7751 3.16814 2.59868 2.54176 2.38991L2.23737 2.28845Z"
              fill="white"
            ></path>
            <path
              d="M7.5 18C8.32843 18 9 18.6716 9 19.5C9 20.3284 8.32843 21 7.5 21C6.67157 21 6 20.3284 6 19.5C6 18.6716 6.67157 18 7.5 18Z"
              fill="white"
            ></path>
            <path
              d="M16.5 18.0001C17.3284 18.0001 18 18.6716 18 19.5001C18 20.3285 17.3284 21.0001 16.5 21.0001C15.6716 21.0001 15 20.3285 15 19.5001C15 18.6716 15.6716 18.0001 16.5 18.0001Z"
              fill="white"
            ></path>
          </g>
        </svg>
        <span>Cart</span>
        <div class="cartcounter">1</div>
      </a>
      <svg
        class="menu"
        onclick="showmenu()"
        viewBox="0 0 24 24"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
          id="SVGRepo_tracerCarrier"
          stroke-linecap="round"
          stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
          <g id="Menu / Menu_Alt_05">
            <path
              id="Vector"
              d="M5 17H13M5 12H19M11 7H19"
              stroke="var(--theme)"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            ></path>
          </g>
        </g>
      </svg>
    </nav>
    <div class="desksidebar">
      <div class="locationcontainer" onclick="showlocations()">
        <img src="logo&ui/locationtheme.svg" alt="" />
        <span>Choose location</span>
      </div>
    </div>
    <div class="locationchoose">
      <button onclick="hidelocations()">X</button>
      <div class="locations">Delhi</div>
      <div class="locations">Gurgaon</div>
      <div class="locations">Noida</div>
    </div>
    <main>
      <div class="imagescontainer">
        <div class="scrollimages"></div>
        <div class="dotscontainer"></div>
        <div class="imagesnote">
          " *Please note: Product may vary slightly from images displayed. "
        </div>
        <button class="sharebutton" onclick="sharepage()">
          <svg
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
            <g
              id="SVGRepo_tracerCarrier"
              stroke-linecap="round"
              stroke-linejoin="round"
            ></g>
            <g id="SVGRepo_iconCarrier">
              <path
                d="M8.99991 11.9999H14.9999"
                stroke="rgb(82, 82, 82)"
                stroke-width="1.5"
                stroke-linecap="round"
              ></path>
              <path
                d="M9 18H8C4.68629 18 2 15.3137 2 12C2 8.68629 4.68629 6 8 6H9"
                stroke="rgb(82, 82, 82)"
                stroke-width="1.5"
                stroke-linecap="round"
              ></path>
              <path
                d="M15 6H16C19.3137 6 22 8.68629 22 12C22 15.3137 19.3137 18 16 18H15"
                stroke="rgb(82, 82, 82)"
                stroke-width="1.5"
                stroke-linecap="round"
              ></path>
            </g>
          </svg>
          <span>Copy link</span>
        </button>
      </div>
      <!--  -->
      <div class="details">
        <div class="title">Product Name</div>
        <div class="alloptionscontainer"></div>
        <hr />
        <!-- timecontainer -->
        <div class="timecontainer">
          <div class="title">Choose Tenure</div>
          <div class="timestamps"></div>
          <input type="range" min="1" max="12" value="1" id="timerange" />
          <div class="showprices">
            <div class="monthly">
              <span id="monthpriceshow"></span><br />
              <div id="monthpriceshowname">Monthly Rent</div>
            </div>
            <hr />
            <div class="total">
              <span id="totalpriceshow"></span><br />
              Total Rent
            </div>
            <hr />
            <div class="refundable">
              <span id="refundablepriceshow"> </span><br />
              Security Deposit <br />
              (*Refundable)
            </div>
          </div>
        </div>
        <!-- add to cart -->
        <div class="addtocart" onclick="addtocart()">
          <div class="eff"></div>
          <svg
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class="cartsvg"
          >
            <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
            <g
              id="SVGRepo_tracerCarrier"
              stroke-linecap="round"
              stroke-linejoin="round"
            ></g>
            <g id="SVGRepo_iconCarrier">
              <path
                d="M2.23737 2.28845C1.84442 2.15746 1.41968 2.36983 1.28869 2.76279C1.15771 3.15575 1.37008 3.58049 1.76303 3.71147L2.02794 3.79978C2.70435 4.02524 3.15155 4.17551 3.481 4.32877C3.79296 4.47389 3.92784 4.59069 4.01426 4.71059C4.10068 4.83049 4.16883 4.99538 4.20785 5.33722C4.24907 5.69823 4.2502 6.17 4.2502 6.883L4.2502 9.55484C4.25018 10.9224 4.25017 12.0247 4.36673 12.8917C4.48774 13.7918 4.74664 14.5497 5.34855 15.1516C5.95047 15.7535 6.70834 16.0124 7.60845 16.1334C8.47542 16.25 9.57773 16.25 10.9453 16.25H18.0002C18.4144 16.25 18.7502 15.9142 18.7502 15.5C18.7502 15.0857 18.4144 14.75 18.0002 14.75H11.0002C9.56479 14.75 8.56367 14.7484 7.80832 14.6468C7.07455 14.5482 6.68598 14.3677 6.40921 14.091C6.17403 13.8558 6.00839 13.5398 5.9034 13H16.0222C16.9817 13 17.4614 13 17.8371 12.7522C18.2128 12.5045 18.4017 12.0636 18.7797 11.1817L19.2082 10.1817C20.0177 8.2929 20.4225 7.34849 19.9779 6.67422C19.5333 5.99996 18.5058 5.99996 16.4508 5.99996H5.74526C5.73936 5.69227 5.72644 5.41467 5.69817 5.16708C5.64282 4.68226 5.52222 4.2374 5.23112 3.83352C4.94002 3.42965 4.55613 3.17456 4.1137 2.96873C3.69746 2.7751 3.16814 2.59868 2.54176 2.38991L2.23737 2.28845Z"
                fill="white"
              ></path>
              <path
                d="M7.5 18C8.32843 18 9 18.6716 9 19.5C9 20.3284 8.32843 21 7.5 21C6.67157 21 6 20.3284 6 19.5C6 18.6716 6.67157 18 7.5 18Z"
                fill="white"
              ></path>
              <path
                d="M16.5 18.0001C17.3284 18.0001 18 18.6716 18 19.5001C18 20.3285 17.3284 21.0001 16.5 21.0001C15.6716 21.0001 15 20.3285 15 19.5001C15 18.6716 15.6716 18.0001 16.5 18.0001Z"
                fill="white"
              ></path>
            </g>
          </svg>
          <svg
            fill="#ffffff"
            viewBox="-5.52 -5.52 35.04 35.04"
            xmlns="http://www.w3.org/2000/svg"
            stroke="#ffffff"
            class="deletesvg"
          >
            <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
            <g
              id="SVGRepo_tracerCarrier"
              stroke-linecap="round"
              stroke-linejoin="round"
            ></g>
            <g id="SVGRepo_iconCarrier">
              <path
                d="M5.755,20.283,4,8H20L18.245,20.283A2,2,0,0,1,16.265,22H7.735A2,2,0,0,1,5.755,20.283ZM21,4H16V3a1,1,0,0,0-1-1H9A1,1,0,0,0,8,3V4H3A1,1,0,0,0,3,6H21a1,1,0,0,0,0-2Z"
              ></path>
            </g>
          </svg>
          <span> Add to cart </span>
        </div>
        <!-- shiping detail -->
        <div class="shippingdetail">
          <svg
            fill="var(--headingsvg)"
            width="179px"
            height="179px"
            viewBox="0 0 14 14"
            role="img"
            focusable="false"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
            <g
              id="SVGRepo_tracerCarrier"
              stroke-linecap="round"
              stroke-linejoin="round"
            ></g>
            <g id="SVGRepo_iconCarrier">
              <path
                d="m 12.999823,7.11841 c 0,-0.002 -1.13e-4,-0.004 -1.42e-4,-0.007 -0.0033,-0.15038 -0.124056,-0.2702 -0.276257,-0.2702 l -0.07254,0 L 11.530659,4.6754 C 11.483399,4.5839 11.389137,4.527 11.285075,4.52697 l -1.9125301,-4e-4 0.072962,-0.57836 C 9.4663249,3.71708 9.3948679,3.49885 9.2442567,3.33367 9.0939297,3.16883 8.8840455,3.07803 8.6532297,3.07803 l -5.9358309,0 c -0.1492478,0 -0.2760303,0.11548 -0.2902593,0.26436 l -0.0595,0.47651 3.3819468,0 c 0.2195973,0 0.3929577,0.17802 0.3872206,0.39762 -0.00577,0.2196 -0.1884413,0.39761 -0.4080386,0.39761 l -1.1280635,0 c 1.988e-4,5.7e-4 3.976e-4,10e-4 5.964e-4,0.002 l -3.312648,0 C 1.1333559,4.61613 1.0041593,4.742 1.000098,4.8973 0.996037,5.0526 1.1186158,5.17847 1.273913,5.17847 l 4.385585,0 C 5.8630771,5.20987 6.015165,5.38588 6.00957,5.59903 6.00344,5.83312 5.8096546,6.02292 5.5759703,6.02488 l -3.0235248,0 c -0.1568593,0 -0.287334,0.12715 -0.2914521,0.28401 -0.00412,0.15686 0.1197106,0.28401 0.2765699,0.28401 l 2.9879099,0 c 0.2065612,0.0288 0.361688,0.20625 0.3560646,0.42148 -0.00616,0.23527 -0.2019034,0.42601 -0.4371782,0.42601 l -3.4278145,0 0,3.1e-4 -0.2880156,0 c -0.1568593,0 -0.287334,0.12716 -0.2914522,0.28402 -0.00412,0.15685 0.1196823,0.28401 0.27657,0.28401 l 0.2485665,0 -0.097217,1.01727 c -0.020846,0.2311 0.050611,0.44933 0.2012502,0.61451 0.1502986,0.16487 0.3602112,0.25564 0.591027,0.25564 l 0.2144283,0 c 0.1021872,0.58432 0.6077269,1.02582 1.2261041,1.02582 0.6183773,0 1.1470354,-0.4415 1.2797538,-1.02579 l 2.6759237,0 c 0.2163596,0 0.4211884,-0.0827 0.581825,-0.21818 0.1468905,0.14098 0.3416085,0.21818 0.5542192,0.21818 l 0.044022,0 c 0.1021588,0.58429 0.6076984,1.02579 1.2261039,1.02579 0.618377,0 1.147035,-0.4415 1.279754,-1.02579 l 0.176626,0 c 0.460126,0 0.868193,-0.37407 0.909659,-0.83386 l 0.173076,-1.91724 c 2.28e-4,-0.003 1.14e-4,-0.005 2.84e-4,-0.008 2.84e-4,-0.004 8.24e-4,-0.008 9.38e-4,-0.0118 5.6e-5,-0.002 -1.71e-4,-0.005 -1.71e-4,-0.007 z m -8.8871313,3.23548 c -0.3915092,0 -0.7017061,-0.31849 -0.6914533,-0.71 0.010253,-0.39154 0.3371211,-0.71006 0.7286303,-0.71006 0.3915093,0 0.7016777,0.31852 0.6914249,0.71006 -0.010253,0.39151 -0.3370927,0.71 -0.7286019,0.71 z m 6.3618473,0 c -0.391509,0 -0.7016775,-0.31849 -0.6914531,-0.71 0.010253,-0.39154 0.3371211,-0.71006 0.7286301,-0.71006 0.39151,0 0.701706,0.31852 0.691425,0.71006 -0.01025,0.39151 -0.337093,0.71 -0.728602,0.71 z M 12.259832,9.02594 C 12.245062,9.18973 12.094453,9.3281 11.930948,9.3281 l -0.191055,0 C 11.613395,8.77561 11.12234,8.36581 10.52657,8.36581 c -0.59577,0 -1.1082679,0.4098 -1.2636788,0.96229 l -0.058478,0 C 9.1322172,9.3281 9.0678039,9.301 9.0229585,9.2518 8.9778295,9.2023 8.9565855,9.13499 8.9631455,9.06219 l 0.3581095,-3.96737 0.822468,1.7e-4 -0.130361,1.44425 c -0.020876,0.2311 0.05055,0.44933 0.201165,0.61451 0.150298,0.1649 0.360268,0.25573 0.591112,0.25573 l 1.600061,0 -0.145869,1.61642 z"
              ></path>
            </g>
          </svg>
          <span>Delivery in 1-2 days post KYC</span>
        </div>
      </div>
    </main>
    <div class="main2container">
      <div class="addonscontainer">
        <div class="title">Included with product</div>
        <button class="addmore"></button>
        <div class="addonscontainerinner">
          <div class="addeditem">
            <img
              src="https://m.media-amazon.com/images/I/61X-sApM8sL.jpg"
              alt=""
            />
            <div class="name">data cable</div>
          </div>
          <div class="addeditem">
            <img
              src="https://m.media-amazon.com/images/I/61X-sApM8sL.jpg"
              alt=""
            />
            <div class="name">data cable</div>
          </div>
          <div class="addeditem">
            <img
              src="https://m.media-amazon.com/images/I/61X-sApM8sL.jpg"
              alt=""
            />
            <div class="name">data cable</div>
          </div>
          <div class="addeditem">
            <img
              src="https://m.media-amazon.com/images/I/61X-sApM8sL.jpg"
              alt=""
            />
            <div class="name">data cable sajkdas dasjd</div>
          </div>
        </div>
      </div>
    </div>
    <div class="descriptioncontainer">
      <h2>
        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
          <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
          ></g>
          <g id="SVGRepo_iconCarrier">
            <circle
              opacity="0.5"
              cx="12"
              cy="12"
              r="10"
              stroke="#1C274C"
              stroke-width="1.5"
            ></circle>
            <path
              d="M12 17V11"
              stroke="#1C274C"
              stroke-width="1.5"
              stroke-linecap="round"
            ></path>
            <circle
              cx="1"
              cy="1"
              r="1"
              transform="matrix(1 0 0 -1 11 9)"
              fill="#1C274C"
            ></circle>
          </g>
        </svg>
        Product Details
      </h2>
      <ul></ul>
    </div>
    <!-- pickups -->
    <div class="pickupscontainer">
      <div class="titleandcontrols">
        <h2>Products related to this item</h2>
        <div class="controlscontainer">
          <button id="pinkupleft">
            <svg
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
              <g
                id="SVGRepo_tracerCarrier"
                stroke-linecap="round"
                stroke-linejoin="round"
              ></g>
              <g id="SVGRepo_iconCarrier">
                <path
                  d="M14.2893 5.70708C13.8988 5.31655 13.2657 5.31655 12.8751 5.70708L7.98768 10.5993C7.20729 11.3805 7.2076 12.6463 7.98837 13.427L12.8787 18.3174C13.2693 18.7079 13.9024 18.7079 14.293 18.3174C14.6835 17.9269 14.6835 17.2937 14.293 16.9032L10.1073 12.7175C9.71678 12.327 9.71678 11.6939 10.1073 11.3033L14.2893 7.12129C14.6799 6.73077 14.6799 6.0976 14.2893 5.70708Z"
                  fill="#0F0F0F"
                ></path>
              </g>
            </svg>
          </button>
          <button id="pinkupright">
            <svg
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
              <g
                id="SVGRepo_tracerCarrier"
                stroke-linecap="round"
                stroke-linejoin="round"
              ></g>
              <g id="SVGRepo_iconCarrier">
                <path
                  d="M14.2893 5.70708C13.8988 5.31655 13.2657 5.31655 12.8751 5.70708L7.98768 10.5993C7.20729 11.3805 7.2076 12.6463 7.98837 13.427L12.8787 18.3174C13.2693 18.7079 13.9024 18.7079 14.293 18.3174C14.6835 17.9269 14.6835 17.2937 14.293 16.9032L10.1073 12.7175C9.71678 12.327 9.71678 11.6939 10.1073 11.3033L14.2893 7.12129C14.6799 6.73077 14.6799 6.0976 14.2893 5.70708Z"
                  fill="#0F0F0F"
                ></path>
              </g>
            </svg>
          </button>
        </div>
      </div>
      <div class="cardscontainer"></div>
    </div>
    <%- include('footer.ejs') %>
    <!-- images scroll -->
    <script>
      let imagesscrollcont = document.querySelector(".scrollimages");
      imagesscrollcont.onscroll = () => {
        document.querySelectorAll(".dots").forEach((dot) => {
          dot.classList.remove("activedot");
        });
        document.querySelectorAll(".dots").forEach((dot, i) => {
          if (
            i ==
            Math.floor(
              (imagesscrollcont.scrollLeft + imagesscrollcont.clientWidth / 2) /
                imagesscrollcont.clientWidth
            )
          ) {
            dot.classList.add("activedot");
          }
        });
      };
      // share page button
      let link = new URL(location.href);
      function sharepage() {
        if (navigator.clipboard) {
          navigator.clipboard
            .writeText(link)
            .then(function () {
              shownotification("Link copied!");
            })
            .catch(function (err) {
              fallbackCopyTextToClipboard(link);
            });
        } else {
          fallbackCopyTextToClipboard(link);
        }
      }
      function fallbackCopyTextToClipboard(text) {
        var textArea = document.createElement("textarea");
        textArea.value = text;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand("copy");
        document.body.removeChild(textArea);
        shownotification("Link copied!");
      }
    </script>
    <!-- nav script -->
    <script src="nav.js"></script>
    <!-- add cart button effect -->
    <script>
      let addtocartbutton = document.querySelector(".addtocart");
      let addcarteffect = document.querySelector(".addtocart .eff");
      addtocartbutton.onmousemove = (e) => {
        addcarteffect = document.querySelector(".addtocart .eff");
        addcarteffect.style.left = e.pageX - addtocartbutton.offsetLeft + "px";
        addcarteffect.style.top = e.pageY - addtocartbutton.offsetTop + "px";
        if (window.innerWidth > 450) addcarteffect.style.height = "700px";
      };
      addtocartbutton.onmouseleave = () => {
        addcarteffect.style.height = "0px";
      };
    </script>
    <!-- main -->
    <script>
      const queryString = window.location.search;
      const urlParams = new URLSearchParams(queryString);
      const product = urlParams.get("p");
      const subcat = urlParams.get("subcat");
      document.title = product + " - RentBean";
      // product details
      let pricetype;
      let typeofprices = {
        0: {
          time: [1, 3, 6, 12],
          suffix: "mo",
          name: "Monthly Rent",
        }, // month
        1: {
          time: [1, 3, 7, 30],
          suffix: "day",
          name: "Daily Rent",
        }, //days
        2: {
          time: [1, 3, 6],
          suffix: "mo",
          name: "Monthly Rent",
        }, //laptops
        3: {
          time: [6],
          suffix: "mo",
          name: "Monthly Rent",
        }, //ac coolers
        4: {
          time: [1, 3, 7],
          suffix: "day",
          name: "Daily Rent",
        }, //upto week
      };
      //
      let optionsarray = {};
      let productdata;
      fetch("data.json")
        .then((res) => res.json())
        .then((res) => {
          for (const key in res) {
            for (const subcat in res[key]["subcat"]) {
              res[key]["subcat"][subcat].products.forEach((data) => {
                if (data.pid == product) {
                  // img meta tag
                  function createOrUpdateMetaTag(property, content) {
                    let metaTag = document.createElement("meta");
                    metaTag.setAttribute("property", property);
                    metaTag.setAttribute("content", content);
                    document.head.appendChild(metaTag);
                  }
                  createOrUpdateMetaTag("og:image", data.image[0]);
                  createOrUpdateMetaTag("twitter:image", data.image[0]);
                  //
                  productdata = data;
                  // setimages
                  data.image.forEach((img, i) => {
                    let image = document.createElement("div");
                    image.classList.add("image");
                    image.innerHTML = `
                      <img
                      src="${img}"
                      loading="lazy"
                      />
                      `;
                    // loading
                    let loading = document.createElement("div");
                    loading.classList.add("loading");
                    loading.innerHTML = `
                      <div class="dot-spinner">
                        <div class="dot-spinner__dot"></div>
                        <div class="dot-spinner__dot"></div>
                        <div class="dot-spinner__dot"></div>
                        <div class="dot-spinner__dot"></div>
                        <div class="dot-spinner__dot"></div>
                        <div class="dot-spinner__dot"></div>
                        <div class="dot-spinner__dot"></div>
                        <div class="dot-spinner__dot"></div>
                      </div>
                      `;
                    image.querySelector("img").onload = () => {
                      loading.style.display = "none";
                    };
                    image.appendChild(loading);
                    document.querySelector(".scrollimages").appendChild(image);
                    // add dotts
                    let dot = document.createElement("div");
                    dot.classList.add("dots");
                    if (i == 0) {
                      dot.classList.add("activedot");
                    }
                    document.querySelector(".dotscontainer").appendChild(dot);
                  });
                  //name
                  document.querySelector(".details .title").innerHTML =
                    data.name;
                  //setoptions
                  data.options.forEach((item) => {
                    let option = document.createElement("div");
                    option.classList.add("optionscontainer");
                    option.innerHTML = `
                      <div class="optionname">${item.name} : <span>${item.defaultvalue}</span></div>
                      `;
                    //
                    let optionmenu = document.createElement("div");
                    optionmenu.classList.add("optionsmenu");
                    item.options.forEach((i, j) => {
                      let button = document.createElement("button");
                      button.classList.add("options");
                      button.setAttribute("type", item.name);
                      if (j == 0) {
                        button.classList.add("activeoption");
                      }
                      button.innerHTML = i;
                      //
                      button.onclick = () => {
                        optionmenu
                          .querySelectorAll("button")
                          .forEach((button) => {
                            button.classList.remove("activeoption");
                          });
                        button.classList.add("activeoption");
                        //
                        option.querySelector("span").innerHTML = i;
                        // save option in option array
                        optionsarray[item.name] = i;
                        optionslocalstorage(data.pid, item.name, i);
                      };
                      optionmenu.appendChild(button);
                    });
                    //
                    option.appendChild(optionmenu);
                    document
                      .querySelector(".alloptionscontainer")
                      .appendChild(option);
                  });
                  // set prices
                  pricetype = data.pricetype;
                  data.prices.forEach((price, i) => {
                    // time stamps
                    let timestamp = document.createElement("span");
                    if (i == 0) {
                      timestamp.classList.add("activetimestamp");
                    }
                    timestamp.innerHTML =
                      typeofprices[data.pricetype - 1].time[i] +
                      typeofprices[data.pricetype - 1].suffix;
                    document
                      .querySelector(".timestamps")
                      .appendChild(timestamp);
                    // input range
                    document.querySelector("#timerange").max =
                      data.prices.length;
                    document.querySelector("#monthpriceshowname").innerHTML =
                      typeofprices[data.pricetype - 1].name;
                    if (data.pricetype == 4) {
                      document.querySelector("#timerange").style.display =
                        "none";
                    }
                    //
                    document.querySelector("#timerange").oninput = (e) => {
                      document
                        .querySelectorAll(".timestamps span")
                        .forEach((item) => {
                          item.classList.remove("activetimestamp");
                        });
                      document
                        .querySelectorAll(".timestamps span")
                        .forEach((item, j) => {
                          if (
                            j + 1 ==
                            document.querySelector("#timerange").value
                          ) {
                            item.classList.add("activetimestamp");
                          }
                        });
                      // daily calculation/monthly calculation
                      document.querySelector("#monthpriceshow").innerHTML =
                        Math.floor(
                          data.prices[e.target.value - 1] /
                            typeofprices[data.pricetype - 1].time[
                              e.target.value - 1
                            ]
                        );
                      if (data.pricetype == 4) {
                        // monthly
                        document.querySelector("#monthpriceshow").innerHTML =
                          "";
                      }
                      // total
                      document.querySelector("#totalpriceshow").innerHTML =
                        data.prices[e.target.value - 1];
                      // local storage update
                      let localproducts =
                        JSON.parse(localStorage.getItem("rbproducts")) || [];
                      localproducts.forEach((product) => {
                        if (product.pid == data.pid) {
                          product.time = e.target.value;
                          localStorage.setItem(
                            "rbproducts",
                            JSON.stringify(localproducts)
                          );
                        }
                      });
                    };
                    // monthly
                    document.querySelector("#monthpriceshow").innerHTML =
                      Math.floor(
                        data.prices[0] /
                          typeofprices[data.pricetype - 1].time[0]
                      );
                    // total
                    document.querySelector("#totalpriceshow").innerHTML =
                      data.prices[0];
                    // refundablepriceshow
                    document.querySelector("#refundablepriceshow").innerHTML =
                      data.refundableprice;
                    //update ui
                    let localproducts =
                      JSON.parse(localStorage.getItem("rbproducts")) || [];
                    localproducts.forEach((product) => {
                      if (product.pid == data.pid) {
                        document.querySelector("#timerange").value =
                          product.time;
                        document
                          .querySelectorAll(".timestamps span")
                          .forEach((timestamp) => {
                            timestamp.classList.remove("activetimestamp");
                          });
                        document
                          .querySelectorAll(".timestamps span")
                          .forEach((timestamp, i) => {
                            if (i + 1 == product.time) {
                              timestamp.classList.add("activetimestamp");
                            }
                          });
                        // update price show
                        document.querySelector("#totalpriceshow").innerHTML =
                          product.prices[product.time - 1];
                        document.querySelector("#monthpriceshow").innerHTML =
                          Math.floor(
                            product.prices[product.time - 1] /
                              typeofprices[data.pricetype - 1].time[
                                product.time - 1
                              ]
                          );
                      }
                    });
                  });
                  // set availability
                  if (data.available == 0) {
                    available = false;
                    document.querySelector(".addtocart").innerHTML = `
                    <div class="eff"></div>
                    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M8.5 11C9.32843 11 10 10.3284 10 9.5C10 8.67157 9.32843 8 8.5 8C7.67157 8 7 8.67157 7 9.5C7 10.3284 7.67157 11 8.5 11Z" fill="#ffffff"></path> <path d="M17 9.5C17 10.3284 16.3284 11 15.5 11C14.6716 11 14 10.3284 14 9.5C14 8.67157 14.6716 8 15.5 8C16.3284 8 17 8.67157 17 9.5Z" fill="#ffffff"></path> <path d="M15.1091 16.4588C15.3597 16.9443 15.9548 17.1395 16.4449 16.8944C16.9388 16.6474 17.1391 16.0468 16.8921 15.5528C16.8096 15.3884 16.7046 15.2343 16.5945 15.0875C16.4117 14.8438 16.1358 14.5299 15.7473 14.2191C14.9578 13.5875 13.7406 13 11.9977 13C10.2547 13 9.03749 13.5875 8.24796 14.2191C7.85954 14.5299 7.58359 14.8438 7.40078 15.0875C7.29028 15.2348 7.1898 15.3889 7.10376 15.5517C6.85913 16.0392 7.06265 16.6505 7.55044 16.8944C8.04053 17.1395 8.63565 16.9443 8.88619 16.4588C8.9 16.4339 9.08816 16.1082 9.49735 15.7809C9.95782 15.4125 10.7406 15 11.9977 15C13.2547 15 14.0375 15.4125 14.498 15.7809C14.9072 16.1082 15.0953 16.4339 15.1091 16.4588Z" fill="#ffffff"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M12 23C18.0751 23 23 18.0751 23 12C23 5.92487 18.0751 1 12 1C5.92487 1 1 5.92487 1 12C1 18.0751 5.92487 23 12 23ZM12 20.9932C7.03321 20.9932 3.00683 16.9668 3.00683 12C3.00683 7.03321 7.03321 3.00683 12 3.00683C16.9668 3.00683 20.9932 7.03321 20.9932 12C20.9932 16.9668 16.9668 20.9932 12 20.9932Z" fill="#ffffff"></path> </g></svg>
                    <span>Currently unavailable</span>`;
                    document.querySelector(
                      ".addtocart .eff"
                    ).style.backgroundColor = "rgb(253, 52, 52)";
                  }
                  //set desc
                  data.desc.forEach((desc) => {
                    let elem = document.createElement("li");
                    elem.innerHTML = desc;
                    document
                      .querySelector(".descriptioncontainer ul")
                      .appendChild(elem);
                  });
                  update_options_according_to_localstorage(data.pid);
                }
              });
            }
          }
        });

      //
      // options update locastorage
      function optionslocalstorage(product, option, value) {
        let localdata = JSON.parse(localStorage.getItem("rbproducts")) || [];
        localdata.forEach((localproduct) => {
          if (localproduct.pid == product) {
            localproduct.options[option] = value;
            localStorage.setItem("rbproducts", JSON.stringify(localdata));
          }
        });
      }
      //
      function update_options_according_to_localstorage(product) {
        let localdata = JSON.parse(localStorage.getItem("rbproducts")) || [];
        localdata.forEach((localproduct) => {
          if (localproduct.pid == product) {
            Object.keys(localproduct.options).forEach((option, i) => {
              document
                .querySelectorAll("button[type='" + option + "']")
                .forEach((item, j) => {
                  item.parentElement.parentElement.querySelector(
                    ".optionname span"
                  ).innerHTML = localproduct.options[option];
                  item.classList.remove("activeoption");
                  if (j == localproduct.options[option] - 1) {
                    item.classList.add("activeoption");
                  }
                });
            });
          }
        });
      }
    </script>
    <!-- // add to cart -->
    <!--   update according to localstorage -->
    <script>
      // update cart button from local storage
      for (const item of localproductarray) {
        if (item.pid == product) {
          updateaddcartbutton(false);
          cartadded = true;
        }
      }
      // update localstorage
      function updatelocalstorage(check) {
        let localdata = JSON.parse(localStorage.getItem("rbproducts"));
        if (localdata == null) {
          localdata = [];
        }
        if (check) {
          // add
          for (const item of localdata) {
            if (item.pid == product) return;
          }
          localStorage.setItem(
            "rbproducts",
            JSON.stringify([
              ...localdata,
              {
                pid: productdata.pid,
                img: productdata.image[0],
                name: productdata.name,
                num: 1,
                limit: productdata.limit,
                time: document.querySelector("#timerange").value,
                prices: productdata.prices,
                pricetype: pricetype,
                options: optionsarray,
              },
            ])
          );
        } else {
          // remove
          localdata = localdata.filter((item) => item.pid != product);
          localStorage.setItem("rbproducts", JSON.stringify(localdata));
        }
      }
    </script>
    <!-- pickups -->
    <script>
      // control pickups
      let pinkupleft = document.querySelector("#pinkupleft");
      let pinkupright = document.querySelector("#pinkupright");
      let cardscontainer = document.querySelector(".cardscontainer");

      pinkupleft.onclick = () => {
        cardscontainer.scrollLeft -= 400;
      };
      pinkupright.onclick = () => {
        cardscontainer.scrollLeft += 400;
      };
      //
      fetch("data.json")
        .then((res) => res.json())
        .then((res) => {
          for (const cat in res) {
            if (!res[cat]["subcat"][subcat]) continue;

            res[cat]["subcat"][subcat]["products"].forEach((data, index) => {
              let card = document.createElement("div");
              card.classList.add("cards");
              if (index % 2 == 0) {
                card.classList.add("snap");
              }
              card.innerHTML = `
                  <a href="productpage?p=${
                    data.pid
                  }&subcat=${subcat}" class="imgcontainer">
                   <div class="loader">
                     <div class="dot-spinner">
                       <div class="dot-spinner__dot"></div>
                       <div class="dot-spinner__dot"></div>
                       <div class="dot-spinner__dot"></div>
                       <div class="dot-spinner__dot"></div>
                       <div class="dot-spinner__dot"></div>
                       <div class="dot-spinner__dot"></div>
                       <div class="dot-spinner__dot"></div>
                       <div class="dot-spinner__dot"></div>
                     </div>
                   </div>
                   <img src="${data.image[0]}" loading="lazy" alt="" />
                     </a>
                     <a href="productpage?p=${
                       data.pid
                     }&subcat=${subcat}" class="name">${data.name}</a>
                     <div class="otherdetailscontainer">
                       <div class="rent">
                         Rent : â‚¹ ${data.prices[0]}/${
                typeofprices[data.pricetype - 1].suffix
              }
                       </div>
                     </div>
                   `;
              card.querySelector(".imgcontainer img").onload = () => {
                card.querySelector(".imgcontainer .loader").style.display =
                  "none";
              };
              document.querySelector(".cardscontainer").appendChild(card);
            });
          }
        });
    </script>
  </body>
</html>
